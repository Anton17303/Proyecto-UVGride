version: '3.8'

services:
  backend:
    build: ./backend
    container_name: uvgride-backend
    ports:
      - "3000:3000"
    depends_on:
      - database
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgres://postgres:password@database:5432/uvgride-script
    volumes:
      - ./backend:/app
      - backend_node_modules:/app/node_modules
    restart: always
    command: >
      sh -c "if [ ! -f package.json ]; then
             npm init -y && 
             npm install express pg sequelize cors dotenv &&
             npm install --save-dev nodemon &&
             echo '{\n  \"scripts\": {\n    \"start\": \"nodemon src/index.js\"\n  }\n}' > package.json &&
             mkdir -p src &&
             echo 'const express = require(\"express\");\nconst app = express();\napp.use(express.json());\napp.get(\"/\", (req, res) => res.json({message: \"API funcionando\"}));\napp.listen(3000, () => console.log(\"Server running on port 3000\"));\n' > src/index.js;
             fi && 
             npm start"

  frontend:
    build: ./frontend
    container_name: uvgride-frontend
    ports:
      - "19000:19000"
      - "19001:19001"
      - "19002:19002"
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
    environment:
      - EXPO_DEVTOOLS_LISTEN_ADDRESS=0.0.0.0
      - REACT_NATIVE_PACKAGER_HOSTNAME=host.docker.internal
    restart: always
    command: >
      sh -c "if [ ! -d node_modules ]; then
             npm install -g expo-cli &&
             expo init -t blank . --non-interactive || true &&
             npm install &&
             sed -i 's/\"start\": \"expo start\"/\"start\": \"expo start --host 0.0.0.0\"/' package.json;
             fi &&
             npm start"

  database:
    image: postgres:15-alpine
    container_name: uvgride-database
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=uvgride-script
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: always

  pgadmin:
    image: dpage/pgadmin4
    container_name: uvgride-pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - "5050:80"
    depends_on:
      - database
    restart: always

volumes:
  postgres_data:
  backend_node_modules:
  frontend_node_modules: